pipeline {
    agent any
    environment {
        KEY = "value"
    }
    parameters {
        string(name: "NAME", defaultValue: "Guess", description: "what is your name")
        text(name: "DESCRIPTION", defaultValue: "Guess", description: "what is your name")
        booleanParam(name: "DEPLOY", defaultValue: false, description: "what is your name")
        choice(name: "SOCIAL", choices: ["instagram", "facebook"], description: "what is your name")
        password(name: "SECRET", defaultValue: "", description: "what is your name")
    }
    options {
        disableConcurrentBuilds()
        timeout(time: 10, unit: 'SECONDS')
    }
    stages {
        stage('Parameter') {
            steps {
                echo("Hello ${params.NAME}")
                echo("Hello ${params.DESCRIPTION}")
                echo("Hello ${params.SOCIAL}")
                echo("Hello ${params.DEPLOY}")
                echo("Hello ${params.SECRET}")
            }
        }
        stage('Prepare') {
            environment {
                APP = credentials("root_root")
            }
            steps {
                echo("Key : ${KEY}")
                echo("Start Job : ${env.JOB_NAME}")
                echo("Build Number : ${env.BUILD_NUMBER}")
                echo("Branch Name : ${env.BRANCH_NAME}")
                echo("APP user : ${APP_USR}")
                sh('echo "App pass : $APP_PSW" > "rahasia.txt"')
            }
        }
        stage('Build') {
            steps {
                script {
                    for(int i = 0 ; i<10; i++){
                        echo("Script ${i}")
                    }
                }
                echo('Start Build')
                // sh('./mvnw clean compile test-compile')
                echo('Finish Build')
            }
        }
        stage('Test') {
            steps {
                script {
                    def data = [
                        "firstname": "test",
                        "lastname": "test"
                    ]

                    writeJSON(file: "data.json", json: data)
                }
                echo('Start Test')
                // sh('./mvnw test')
                echo('Finish Test')
            }
        }
        stage('Deploy') {
            input {
                message "Can we deploy"
                ok "Yes"
                submitter "w"
            }
            steps {
                echo('Hello Deploy')
            }
        }
    }
    post {
        always {
            echo "Always"
        }
        success {
            echo "success"
        }
        failure {
            echo "failure"
        }
        cleanup {
            echo "cleanup"
        }
    }
}